name: 'publish'
on:
  workflow_dispatch:
  push:
    tags:
      - "v*"
jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [
          macos-latest,
          ubuntu-latest,
          windows-latest
        ]
        include:
          - os: macos-latest
            rust_target: universal-apple-darwin
          - os: ubuntu-latest
            rust_target: x86_64-unknown-linux-gnu
          - os: windows-latest
            rust_target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libgtk-3-dev

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './apps/app/src-tauri -> target'

      - name: install frontend dependencies # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: npm install

      - name: build
        run: npm run build

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: v__VERSION__
          releaseName: 'zkVot v__VERSION__'
          releaseBody: 'Download the binary for your platform from the assets below.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
